/// Flutter icons AppIcons
/// Copyright (C) 2020 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  AppIcons
///      fonts:
///       - asset: fonts/AppIcons.ttf
///
///
///
import 'package:flutter/widgets.dart';

class AppIcons {
  AppIcons._();

  static const String _ogFontFam = "AppIcons";
  static const String _kFontFam = "ExtraAppIcons";
  static const String? _kFontPkg = null;

  static const IconData accountswitcher = IconData(0xe800, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData accountwallet = IconData(0xe801, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData addcontact = IconData(0xe802, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData appia = IconData(0xe803, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData at = IconData(0xe804, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData back = IconData(0xe805, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData backupseed = IconData(0xe806, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData bananocurrency = IconData(0xe807, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData bananohorizontal = IconData(0xe808, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData bananologo = IconData(0xe809, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData btc = IconData(0xe80a, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData changerepresentative = IconData(0xe80b, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData close = IconData(0xe80c, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData contact = IconData(0xe80d, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData currency = IconData(0xe80e, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData dotemtpy = IconData(0xe80f, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData dotfilled = IconData(0xe810, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData export_icon = IconData(0xe811, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData fingerprint = IconData(0xe812, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData forward = IconData(0xe813, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData import_icon = IconData(0xe814, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData importwallet = IconData(0xe815, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData info = IconData(0xe816, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData language = IconData(0xe817, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData lock = IconData(0xe818, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData logout = IconData(0xe819, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData max = IconData(0xe81a, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData nanocurrency = IconData(0xe81b, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData nanohorizontal = IconData(0xe81c, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData nanologo = IconData(0xe81d, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData natricon = IconData(0xe81e, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData newwallet = IconData(0xe820, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData notifications = IconData(0xe821, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData paste = IconData(0xe822, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData received = IconData(0xe823, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData scan = IconData(0xe824, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData score = IconData(0xe825, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData search = IconData(0xe826, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData seed = IconData(0xe827, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData sent = IconData(0xe828, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData settings = IconData(0xe829, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData share = IconData(0xe82a, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData success = IconData(0xe82b, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData swapcurrency = IconData(0xe82c, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData theme = IconData(0xe82d, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData timer = IconData(0xe82e, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData transferfunds = IconData(0xe82f, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData trashcan = IconData(0xe830, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData walletpassword = IconData(0xe831, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData warning = IconData(0xe832, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData walletpassworddisabled = IconData(0xe833, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  static const IconData security = IconData(0xe834, fontFamily: _ogFontFam, fontPackage: _kFontPkg);
  // extra app icons:
  // had to include an extra font since I can't re-generate the font file without the config file
  // could be done eventually, but for now I'm just including the extra font file
  static const IconData money = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData call_received = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData call_missed_outgoing = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData call_made = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData call_missed = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData call_split = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData swap_calls = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData call_merge = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData block = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData more_horiz = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData clear = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData clear_all = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData content_copy = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData heart = IconData(0xf004, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData star = IconData(0xf005, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData home = IconData(0xf015, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData qrcode = IconData(0xf029, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData gift = IconData(0xf06b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData money_bill = IconData(0xf0d6, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData envelope = IconData(0xf0e0, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData clipboard = IconData(0xf328, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData money_bill_alt = IconData(0xf3d1, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData coins = IconData(0xf51e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData greater_than = IconData(0xf531, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData greater_than_equal = IconData(0xf532, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData less_than = IconData(0xf536, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData less_than_equal = IconData(0xf537, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData money_bill_wave = IconData(0xf53a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData wallet = IconData(0xf555, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData file_export = IconData(0xf56e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData file_import = IconData(0xf56f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
